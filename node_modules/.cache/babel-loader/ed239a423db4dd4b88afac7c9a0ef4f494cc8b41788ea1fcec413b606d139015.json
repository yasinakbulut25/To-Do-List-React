{"ast":null,"code":"import _toConsumableArray from\"/Users/yasinakbulut/Desktop/react-project/application/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/yasinakbulut/Desktop/react-project/application/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var TaskContext=/*#__PURE__*/createContext();function Provider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),taskList=_useState2[0],setTaskList=_useState2[1];var _useState3=useState(\"all\"),_useState4=_slicedToArray(_useState3,2),currentStatus=_useState4[0],setCurrentStatus=_useState4[1];useEffect(function(){fetchTasks();},[]);var changeStatus=function changeStatus(status){setCurrentStatus(status);};var createTask=function createTask(title,taskDetail){var newTasksList=[].concat(_toConsumableArray(taskList),[{id:Math.round(Math.random()*999999),title:title,taskDetail:taskDetail.trim(),status:\"pending\"}]);localStorage.setItem(\"tasks\",JSON.stringify(newTasksList));setTaskList(newTasksList);};var onDelete=function onDelete(id){var newTasksList=taskList.filter(function(item){return item.id!==id;});localStorage.setItem(\"tasks\",JSON.stringify(newTasksList));setTaskList(newTasksList);};var onUpdate=function onUpdate(id,title,taskDetail,status){var newTasksList=taskList.map(function(item){if(item.id===id){return{id:id,title:title,taskDetail:taskDetail,status:status};}return item;});localStorage.setItem(\"tasks\",JSON.stringify(newTasksList));setTaskList(newTasksList);};var onStatusUpdate=function onStatusUpdate(task){var newTasksList=_toConsumableArray(taskList);var findTask=newTasksList.find(function(item){return item.id===task.id;});findTask.status=findTask.status===\"pending\"?\"completed\":\"pending\";localStorage.setItem(\"tasks\",JSON.stringify(newTasksList));setTaskList(newTasksList);};var fetchTasks=function fetchTasks(){var tasks;if(localStorage.getItem(\"tasks\")){tasks=JSON.parse(localStorage.getItem(\"tasks\"));}else{localStorage.setItem(\"tasks\",JSON.stringify([]));tasks=JSON.parse(localStorage.getItem(\"tasks\"));}setTaskList(tasks);};var sharedValuesAndMethods={taskList:taskList,createTask:createTask,onDelete:onDelete,onUpdate:onUpdate,fetchTasks:fetchTasks,onStatusUpdate:onStatusUpdate,changeStatus:changeStatus,currentStatus:currentStatus};return/*#__PURE__*/_jsx(TaskContext.Provider,{value:sharedValuesAndMethods,children:children});}export{Provider};export default TaskContext;","map":{"version":3,"names":["createContext","useEffect","useState","TaskContext","Provider","children","taskList","setTaskList","currentStatus","setCurrentStatus","fetchTasks","changeStatus","status","createTask","title","taskDetail","newTasksList","id","Math","round","random","trim","localStorage","setItem","JSON","stringify","onDelete","filter","item","onUpdate","map","onStatusUpdate","task","findTask","find","tasks","getItem","parse","sharedValuesAndMethods"],"sources":["/Users/yasinakbulut/Desktop/react-project/application/src/context/TaskContex.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nconst TaskContext = createContext();\n\nfunction Provider({ children }) {\n  const [taskList, setTaskList] = useState([]);\n  const [currentStatus, setCurrentStatus] = useState(\"all\");\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const changeStatus = (status) => {\n    setCurrentStatus(status);\n  };\n\n  const createTask = (title, taskDetail) => {\n    const newTasksList = [\n      ...taskList,\n      {\n        id: Math.round(Math.random() * 999999),\n        title,\n        taskDetail: taskDetail.trim(),\n        status: \"pending\",\n      },\n    ];\n\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    setTaskList(newTasksList);\n  };\n\n  const onDelete = (id) => {\n    const newTasksList = taskList.filter((item) => item.id !== id);\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    setTaskList(newTasksList);\n  };\n\n  const onUpdate = (id, title, taskDetail, status) => {\n    const newTasksList = taskList.map((item) => {\n      if (item.id === id) {\n        return { id, title, taskDetail, status };\n      }\n      return item;\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    setTaskList(newTasksList);\n  };\n\n  const onStatusUpdate = (task) => {\n    const newTasksList = [...taskList];\n    const findTask = newTasksList.find((item) => item.id === task.id);\n    findTask.status = findTask.status === \"pending\" ? \"completed\" : \"pending\";\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    setTaskList(newTasksList);\n  };\n\n  const fetchTasks = () => {\n    let tasks;\n    if (localStorage.getItem(\"tasks\")) {\n      tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    } else {\n      localStorage.setItem(\"tasks\", JSON.stringify([]));\n      tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    }\n    setTaskList(tasks);\n  };\n\n  const sharedValuesAndMethods = {\n    taskList,\n    createTask,\n    onDelete,\n    onUpdate,\n    fetchTasks,\n    onStatusUpdate,\n    changeStatus,\n    currentStatus,\n  };\n\n  return (\n    <TaskContext.Provider value={sharedValuesAndMethods}>\n      {children}\n    </TaskContext.Provider>\n  );\n}\n\nexport { Provider };\nexport default TaskContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}