{"ast":null,"code":"var _jsxFileName = \"/Users/yasinakbulut/Desktop/react-project/application/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport TaskItem from \"./TaskItem\";\nimport { useContext } from 'react';\nimport TaskContext from '../context/TaskContex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const {\n    taskList,\n    currentStatus,\n    changeStatus\n  } = useContext(TaskContext);\n  const showTaskList = () => {\n    return taskList.length > 0 ? taskList.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty-message\",\n      children: [\"You have no \", currentStatus, \" task yet\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeStatus(\"all\"),\n        type: \"button\",\n        className: currentStatus === \"all\" ? \"filter-btn active\" : \"filter-btn\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeStatus(\"pending\"),\n        type: \"button\",\n        className: currentStatus === \"pending\" ? \"filter-btn active\" : \"filter-btn\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeStatus(\"completed\"),\n        type: \"button\",\n        className: currentStatus === \"completed\" ? \"filter-btn active\" : \"filter-btn\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: [currentStatus, \" Task List\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: showTaskList(currentStatus)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"pehtoHb6kem89YDOSA/5Ncs7n/U=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskItem","useContext","TaskContext","TaskList","taskList","currentStatus","changeStatus","showTaskList","length","map","task","index"],"sources":["/Users/yasinakbulut/Desktop/react-project/application/src/components/TaskList.js"],"sourcesContent":["import React from \"react\";\nimport TaskItem from \"./TaskItem\";\nimport { useContext } from 'react'\nimport TaskContext from '../context/TaskContex';\nfunction TaskList() {\n  const { taskList , currentStatus, changeStatus} = useContext(TaskContext)\n  const showTaskList = () => {\n    return taskList.length > 0 ? taskList.map((task, index) => {\n      return (\n        <TaskItem\n          key={index}\n          task={task}\n        />\n      );\n    }) : <p className=\"empty-message\">You have no {currentStatus} task yet</p>\n  }\n  return (\n    <div className=\"tasks\">\n      <div className=\"filter\">\n        <button onClick={() => changeStatus(\"all\")} type=\"button\" className={currentStatus === \"all\" ? \"filter-btn active\" : \"filter-btn\"}>All</button>\n        <button onClick={() => changeStatus(\"pending\")} type=\"button\" className={currentStatus === \"pending\" ? \"filter-btn active\" : \"filter-btn\"}>Pending</button>\n        <button onClick={() => changeStatus(\"completed\")} type=\"button\" className={currentStatus === \"completed\" ? \"filter-btn active\" : \"filter-btn\"}>Completed</button>\n      </div>\n      <h3 className=\"title\">{currentStatus} Task List</h3>\n      <div className=\"task-list\">\n        {\n          showTaskList(currentStatus)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,uBAAuB;AAAC;AAChD,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAM;IAAEC,QAAQ;IAAGC,aAAa;IAAEC;EAAY,CAAC,GAAGL,UAAU,CAACC,WAAW,CAAC;EACzE,MAAMK,YAAY,GAAG,MAAM;IACzB,OAAOH,QAAQ,CAACI,MAAM,GAAG,CAAC,GAAGJ,QAAQ,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACzD,oBACE,QAAC,QAAQ;QAEP,IAAI,EAAED;MAAK,GADNC,KAAK;QAAA;QAAA;QAAA;MAAA,QAEV;IAEN,CAAC,CAAC,gBAAG;MAAG,SAAS,EAAC,eAAe;MAAA,WAAC,cAAY,EAACN,aAAa,EAAC,WAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAAI;EAC5E,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,wBACpB;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACrB;QAAQ,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAK,CAAE;QAAC,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAED,aAAa,KAAK,KAAK,GAAG,mBAAmB,GAAG,YAAa;QAAA,UAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,eAC/I;QAAQ,OAAO,EAAE,MAAMC,YAAY,CAAC,SAAS,CAAE;QAAC,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAED,aAAa,KAAK,SAAS,GAAG,mBAAmB,GAAG,YAAa;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS,eAC3J;QAAQ,OAAO,EAAE,MAAMC,YAAY,CAAC,WAAW,CAAE;QAAC,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAED,aAAa,KAAK,WAAW,GAAG,mBAAmB,GAAG,YAAa;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7J,eACN;MAAI,SAAS,EAAC,OAAO;MAAA,WAAEA,aAAa,EAAC,YAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACpD;MAAK,SAAS,EAAC,WAAW;MAAA,UAEtBE,YAAY,CAACF,aAAa;IAAC;MAAA;MAAA;MAAA;IAAA,QAEzB;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA3BQF,QAAQ;AAAA,KAARA,QAAQ;AA6BjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}