{"ast":null,"code":"var _jsxFileName = \"/Users/yasinakbulut/Desktop/react-project/application/src/context/TaskContex.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/createContext();\nfunction Provider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [taskList, setTaskList] = useState([]);\n  const createTask = (title, taskDetail) => {\n    const newTasksList = [...taskList, {\n      id: Math.round(Math.random() * 999999),\n      title,\n      taskDetail: taskDetail.trim(),\n      status: \"pending\"\n    }];\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    setTaskList(newTasksList);\n  };\n  const onDelete = id => {\n    const newTasksList = taskList.filter(item => item.id !== id);\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    setTaskList(newTasksList);\n  };\n  const onUpdate = (id, title, taskDetail, status) => {\n    const newTasksList = taskList.map(item => {\n      if (item.id === id) {\n        return {\n          id,\n          title,\n          taskDetail,\n          status\n        };\n      }\n      return item;\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    setTaskList(newTasksList);\n  };\n  const onStatusUpdate = task => {\n    const newTasksList = [...taskList];\n    const findTask = newTasksList.find(item => item.id === task.id);\n    findTask.status = findTask.status === \"pending\" ? \"completed\" : \"pending\";\n    localStorage.setItem(\"tasks\", JSON.stringify(newTasksList));\n    setTaskList(newTasksList);\n  };\n  const fetchTasks = () => {\n    let tasks;\n    if (localStorage.getItem(\"tasks\")) {\n      tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    } else {\n      localStorage.setItem(\"tasks\", JSON.stringify([]));\n      tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    }\n    setTaskList(tasks);\n  };\n  const sharedValuesAndMethods = {\n    taskList,\n    createTask,\n    onDelete,\n    onUpdate,\n    fetchTasks,\n    onStatusUpdate\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: sharedValuesAndMethods,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Provider, \"mW6q2/agXv25Ej2PBKHyLCwtTHc=\");\n_c = Provider;\nexport { Provider };\nexport default TaskContext;\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["createContext","useState","TaskContext","Provider","children","taskList","setTaskList","createTask","title","taskDetail","newTasksList","id","Math","round","random","trim","status","localStorage","setItem","JSON","stringify","onDelete","filter","item","onUpdate","map","onStatusUpdate","task","findTask","find","fetchTasks","tasks","getItem","parse","sharedValuesAndMethods"],"sources":["/Users/yasinakbulut/Desktop/react-project/application/src/context/TaskContex.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nconst TaskContext = createContext();\n\nfunction Provider({ children }) {\n  const [taskList, setTaskList] = useState([]);\n\n  const createTask = (title, taskDetail) => {\n    const newTasksList = [\n      ...taskList,\n      {\n        id: Math.round(Math.random() * 999999),\n        title,\n        taskDetail: taskDetail.trim(),\n        status: \"pending\"\n      },\n    ];\n\n    localStorage.setItem(\"tasks\",JSON.stringify(newTasksList))\n    setTaskList(newTasksList);\n  };\n\n  const onDelete = (id) => {\n    const newTasksList = taskList.filter((item) => item.id !== id);\n    localStorage.setItem(\"tasks\",JSON.stringify(newTasksList))\n    setTaskList(newTasksList);\n  };\n\n  const onUpdate = (id, title, taskDetail,status) => {\n    const newTasksList = taskList.map((item) => {\n      if (item.id === id) {\n        return { id, title, taskDetail, status };\n      }\n      return item;\n    });\n    localStorage.setItem(\"tasks\",JSON.stringify(newTasksList))\n    setTaskList(newTasksList);\n  };\n\n  const onStatusUpdate = (task) => {\n    const newTasksList = [...taskList]\n    const findTask = newTasksList.find(item => item.id === task.id)\n    findTask.status = findTask.status === \"pending\" ? \"completed\" : \"pending\"\n    localStorage.setItem(\"tasks\",JSON.stringify(newTasksList))\n    setTaskList(newTasksList);\n  }\n\n  const fetchTasks = () =>{\n    let tasks;\n    if(localStorage.getItem(\"tasks\")){\n      tasks = JSON.parse(localStorage.getItem(\"tasks\"))\n    }else{\n      localStorage.setItem(\"tasks\",JSON.stringify([]))\n      tasks = JSON.parse(localStorage.getItem(\"tasks\"))\n    }\n    setTaskList(tasks)\n  }\n\n  const sharedValuesAndMethods = {\n    taskList,\n    createTask,\n    onDelete,\n    onUpdate,\n    fetchTasks,\n    onStatusUpdate\n  };\n\n  return (\n    <TaskContext.Provider value={sharedValuesAndMethods}>\n      {children}\n    </TaskContext.Provider>\n  );\n}\n\nexport { Provider };\nexport default TaskContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}